# Sample Secrets Test Data
# This file contains various types of secrets and sensitive data patterns
# that should be detected and redacted by the tokenization system.
# Use this file to test redaction capabilities.

# =============================================================================
# Environment Variables (KEY=value format)
# =============================================================================
DATABASE_PASSWORD=super_secret_db_password_123
API_TOKEN=sk-1234567890abcdefghijklmnopqrstuvwxyz
USER_PASSWORD=MyComplexPassword!@#$%
MYSQL_ROOT_PASSWORD=mysql_admin_password_456
POSTGRES_PASSWORD=postgres_secret_789
REDIS_PASSWORD=redis_auth_key_abc123
MONGODB_PASSWORD=mongo_db_secret_def456
JWT_SECRET=jwt_signing_key_very_long_and_secure_ghi789
SESSION_SECRET=session_encryption_key_jkl012
ENCRYPTION_KEY=aes256_encryption_key_mno345
OPENAI_API_KEY=sk-openai1234567890abcdefghijklmnopqrstuvwxyz1234567890
ANTHROPIC_API_KEY=sk-ant-api03-anthropic_key_here_pqr678
STRIPE_SECRET_KEY=sk_test_51234567890abcdefghijklmnopqrstuvwxyz
STRIPE_PUBLISHABLE_KEY=pk_test_51234567890abcdefghijklmnopqrstuvwxyz
GITHUB_TOKEN=ghp_github_personal_access_token_stu901
GITLAB_TOKEN=glpat-gitlab_access_token_vwx234
SLACK_BOT_TOKEN=xoxb-slack-bot-token-yz567890abcdef
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX
DISCORD_BOT_TOKEN=discord_bot_token_abcdef123456789
TWILIO_AUTH_TOKEN=twilio_auth_token_ghijkl789012345
SENDGRID_API_KEY=SG.sendgrid_api_key_mnopqr345678901
MAILGUN_API_KEY=key-mailgun_api_key_stuvwx567890123
AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMPLE
AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
GOOGLE_CLOUD_API_KEY=AIzaSyGoogle_Cloud_API_Key_Example_123456789
AZURE_CLIENT_SECRET=azure_client_secret_example_abcdef123456
DOCKER_HUB_PASSWORD=docker_hub_password_ghijkl789012
NPM_TOKEN=npm_token_mnopqr345678901234567890
PYPI_TOKEN=pypi-token-stuvwx567890123456789012345
HEROKU_API_KEY=heroku_api_key_yz901234567890abcdef
NETLIFY_ACCESS_TOKEN=netlify_access_token_ghijkl123456789
VERCEL_TOKEN=vercel_token_mnopqr567890123456789

# =============================================================================
# YAML Key-Value Patterns
# =============================================================================
# Basic secret patterns
password: "basic_yaml_password_123"
secret: "basic_yaml_secret_456"
token: "basic_yaml_token_789"
api-key: "basic_yaml_api_key_abc"
apikey: "basic_yaml_apikey_def"
api_key: "basic_yaml_api_key_ghi"

# Database credentials
database-password: "db_yaml_password_jkl"
db-password: "db_yaml_password_mno"
mysql-password: "mysql_yaml_password_pqr"
postgres-password: "postgres_yaml_password_stu"
redis-password: "redis_yaml_password_vwx"
mongodb-password: "mongodb_yaml_password_yz1"

# Service-specific keys
openai-key: "sk-openai_yaml_key_234567890abcdefghijklmnop"
openai-api-key: "sk-openai_yaml_api_key_567890abcdefghijklmnopqr"
anthropic-key: "sk-ant-anthropic_yaml_key_890abcdefghijklmnopqrst"
stripe-secret: "sk_test_stripe_yaml_secret_abcdefghijklmnopqrstuvw"
stripe-secret-key: "sk_test_stripe_yaml_secret_key_defghijklmnopqrs"
github-token: "ghp_github_yaml_token_hijklmnopqrstuvwxyz12345"
gitlab-token: "glpat-gitlab_yaml_token_lmnopqrstuvwxyz678901"
slack-token: "xoxb-slack_yaml_token_pqrstuvwxyz234567890abc"
discord-token: "discord_yaml_token_stuvwxyz567890abcdefghij"
twilio-token: "twilio_yaml_token_wxyz890abcdefghijklmnopqr"

# Authentication and encryption
jwt-secret: "jwt_yaml_secret_z123456789abcdefghijklmnop"
session-secret: "session_yaml_secret_456789abcdefghijklmnopqr"
encryption-key: "encryption_yaml_key_789abcdefghijklmnopqrstu"
private-key: "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC..."
client-secret: "oauth_client_yaml_secret_abcdefghijklmnopqrstuv"
client-key: "oauth_client_yaml_key_defghijklmnopqrstuvwxyz1"

# Email and communication
smtp-password: "smtp_yaml_password_ghijklmnopqrstuvwxyz2345"
email-password: "email_yaml_password_jklmnopqrstuvwxyz567890"
sendgrid-key: "SG.sendgrid_yaml_key_mnopqrstuvwxyz890abcdef"
mailgun-key: "key-mailgun_yaml_key_pqrstuvwxyz123456789abc"

# Cloud provider credentials
aws-secret: "aws_yaml_secret_stuvwxyz456789abcdefghijkl"
gcp-key: "gcp_yaml_key_wxyz789abcdefghijklmnopqrstuv"
azure-secret: "azure_yaml_secret_123456789abcdefghijklmno"

# =============================================================================
# Connection Strings
# =============================================================================
database-url: "mysql://admin:super_secret_password@mysql.example.com:3306/production_db"
postgres-url: "postgresql://postgres:postgres_secret_123@postgres.example.com:5432/app_db"
redis-url: "redis://default:redis_password_456@redis.example.com:6379"
mongodb-url: "mongodb://mongo_user:mongo_password_789@mongodb.example.com:27017/app_database"
elasticsearch-url: "https://elastic:elastic_password_abc@elasticsearch.example.com:9200"
rabbitmq-url: "amqp://rabbitmq_user:rabbitmq_password_def@rabbitmq.example.com:5672"
kafka-url: "kafka://kafka_user:kafka_password_ghi@kafka.example.com:9092"

# HTTP URLs with credentials
api-endpoint: "https://api_user:api_password_jkl@api.example.com/v1"
webhook-url: "https://webhook_user:webhook_password_mno@webhooks.example.com/callback"
ftp-url: "ftp://ftp_user:ftp_password_pqr@ftp.example.com:21"
sftp-url: "sftp://sftp_user:sftp_password_stu@sftp.example.com:22"

# =============================================================================
# Database Connection String Formats
# =============================================================================
# SQL Server format
Data Source=sql.example.com;Initial Catalog=ProductionDB;User ID=sql_admin;Password=sql_server_password_123;
Server=sql.example.com;Database=AppDB;Uid=sql_user;Pwd=sql_password_456;
# Oracle format
Data Source=oracle.example.com:1521/XE;User Id=oracle_user;Password=oracle_password_789;
# MySQL format  
Server=mysql.example.com;Database=mysql_db;Uid=mysql_admin;Pwd=mysql_secret_abc;
# PostgreSQL format
Host=postgres.example.com;Database=postgres_db;Username=pg_user;Password=pg_password_def;

# =============================================================================
# Nested YAML Structures
# =============================================================================
application:
  name: "MyApp"
  version: "1.0.0"
  
database:
  host: "db.example.com"
  port: 5432
  name: "production_db"
  username: "db_admin"
  password: "nested_db_password_123"
  ssl: true
  
redis:
  host: "redis.example.com"
  port: 6379
  password: "nested_redis_password_456"
  database: 0

external_services:
  openai:
    api_key: "sk-openai_nested_key_789abcdefghijklmnopqrstuvwxyz"
    organization: "org-openai_org_id_abcdefghijklmnop"
    
  stripe:
    publishable_key: "pk_test_nested_stripe_pub_key_qrstuvwxyz123456"
    secret_key: "sk_test_nested_stripe_secret_key_789abcdefghijk"
    webhook_secret: "whsec_nested_stripe_webhook_secret_lmnopqrstuv"
    
  github:
    token: "ghp_nested_github_token_wxyz123456789abcdefghijkl"
    webhook_secret: "nested_github_webhook_secret_mnopqrstuvwxyz"
    
  aws:
    access_key_id: "AKIANESTED_AWS_ACCESS_KEY_ID_EXAMPLE"
    secret_access_key: "nested_aws_secret_access_key_example_123456789abcdef"
    region: "us-west-2"
    
  email:
    smtp_host: "smtp.example.com"
    smtp_port: 587
    smtp_username: "noreply@example.com"
    smtp_password: "nested_smtp_password_pqrstuvwxyz123"
    
security:
  jwt:
    secret: "nested_jwt_secret_456789abcdefghijklmnopqrstuvw"
    expiration: "24h"
    
  encryption:
    key: "nested_encryption_key_xyz789abcdefghijklmnopqrstu"
    algorithm: "AES-256-GCM"
    
  oauth:
    google:
      client_id: "google_client_id_123456789.apps.googleusercontent.com"
      client_secret: "nested_google_client_secret_abcdefghijklmno"
    
    github:
      client_id: "nested_github_oauth_client_id_pqrstuvwxyz"
      client_secret: "nested_github_oauth_client_secret_123456789abc"

# =============================================================================
# Environment-style in YAML (Kubernetes ConfigMap/Secret format)
# =============================================================================
env:
  - name: DATABASE_URL
    value: "postgresql://k8s_user:k8s_db_password_123@postgres:5432/k8s_db"
  - name: REDIS_URL
    value: "redis://default:k8s_redis_password_456@redis:6379"
  - name: API_KEY
    value: "k8s_api_key_789abcdefghijklmnopqrstuvwxyz"
  - name: JWT_SECRET
    value: "k8s_jwt_secret_abcdefghijklmnopqrstuvwxyz123456"
  - name: ENCRYPTION_KEY
    value: "k8s_encryption_key_defghijklmnopqrstuvwxyz789012"
  - name: OPENAI_API_KEY
    value: "sk-k8s_openai_key_ghijklmnopqrstuvwxyz345678901234"
  - name: STRIPE_SECRET_KEY
    value: "sk_test_k8s_stripe_secret_jklmnopqrstuvwxyz567890123"
  - name: GITHUB_TOKEN
    value: "ghp_k8s_github_token_mnopqrstuvwxyz789012345678"
  - name: SLACK_BOT_TOKEN
    value: "xoxb-k8s_slack_bot_token_pqrstuvwxyz012345678901"
  - name: AWS_ACCESS_KEY_ID
    value: "AKIAK8S_AWS_ACCESS_KEY_EXAMPLE_STUVWXYZ"
  - name: AWS_SECRET_ACCESS_KEY
    value: "k8s_aws_secret_access_key_example_345678901234567890abcdef"

# =============================================================================
# JSON-like Environment Variables (escaped format)
# =============================================================================
json_env_vars: |
  "name":"DATABASE_PASSWORD","value":"json_db_password_123456789abcdef"
  "name":"API_TOKEN","value":"json_api_token_ghijklmnopqrstuvwxyz"
  "name":"JWT_SIGNING_KEY","value":"json_jwt_key_123456789abcdefghijklmnop"
  "name":"REDIS_AUTH_TOKEN","value":"json_redis_token_qrstuvwxyz123456789abc"
  "name":"OPENAI_API_KEY","value":"sk-json_openai_key_defghijklmnopqrstuvwxyz567890"
  "name":"STRIPE_SECRET","value":"sk_test_json_stripe_secret_hijklmnopqrstuvw"
  "name":"GITHUB_ACCESS_TOKEN","value":"ghp_json_github_token_xyz123456789abcdefghijklm"
  "name":"SLACK_WEBHOOK_URL","value":"https://hooks.slack.com/services/T12345678/B87654321/json_slack_webhook_nopqrstuvwxyz"

# =============================================================================
# AWS-style Keys (multiline patterns)
# =============================================================================
aws_credentials: |
  "name": "AWS_ACCESS_KEY_ID"
  "value": "AKIAAWS_MULTILINE_ACCESS_KEY_EXAMPLE_123"
  
aws_secret: |
  "name": "AWS_SECRET_ACCESS_KEY"  
  "value": "aws_multiline_secret_access_key_example_456789abcdefghijklmnopqrstuvwxyz"

aws_session: |
  "name": "AWS_SESSION_TOKEN"
  "value": "aws_multiline_session_token_example_789abcdefghijklmnopqrstuvwxyz123456789"

# =============================================================================
# Certificate and Key Data
# =============================================================================
tls:
  certificate: |
    -----BEGIN CERTIFICATE-----
    MIIDXTCCAkWgAwIBAgIJAKoK/heBjcOuMA0GCSqGSIb3DQEBBQUAMEUxCzAJBgNV
    BAYTAkFVMRMwEQYDVQQIDApTb21lLVN0YXRlMSEwHwYDVQQKDBhJbnRlcm5ldCBX
    aWRnaXRzIFB0eSBMdGQwHhcNMTExMjMxMDg1OTU5WhcNMTIxMjMwMDg1OTU5WjBF
    MQswCQYDVQQGEwJBVTETMBEGA1UECAwKU29tZS1TdGF0ZTEhMB8GA1UECgwYSW50
    ZXJuZXQgV2lkZ2l0cyBQdHkgTHRkMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB
    CgKCAQEAwUdHPiQnXwxmkEs/o/9rNCNcSLgp4+SQnAFrqk3ZFtOGlZr+eTgmyTlk
    -----END CERTIFICATE-----
    
  private_key: |
    -----BEGIN PRIVATE KEY-----
    MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDBR0c+JCdfDGaQ
    Sz+j/2s0I1xIuCnj5JCcAWuqTdkW04aVmv55OCbJOWTBaWmLahfFJ5jNhvQKzIVu
    W7jEM/+B/XLuUpx5B2EupiKkceIlUR3s4+wjrRMsVlI1XTXhw+CtYu5HNEJJQtBt
    -----END PRIVATE KEY-----

# =============================================================================
# Docker and Container Secrets
# =============================================================================
docker:
  registry: "docker.io"
  username: "docker_user"
  password: "docker_registry_password_123456789abcdef"
  email: "docker@example.com"

container_registry:
  gcr:
    service_account_key: |
      {
        "type": "service_account",
        "project_id": "my-project-123456",
        "private_key_id": "gcr_private_key_id_abcdefghijklmnop",
        "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC...\n-----END PRIVATE KEY-----\n",
        "client_email": "service-account@my-project-123456.iam.gserviceaccount.com",
        "client_id": "gcr_client_id_123456789012345678901",
        "auth_uri": "https://accounts.google.com/o/oauth2/auth",
        "token_uri": "https://oauth2.googleapis.com/token"
      }

# =============================================================================
# Monitoring and Observability
# =============================================================================
monitoring:
  datadog:
    api_key: "datadog_api_key_123456789abcdefghijklmnopqrstuvwxyz"
    app_key: "datadog_app_key_abcdefghijklmnopqrstuvwxyz123456789"
    
  newrelic:
    license_key: "newrelic_license_key_defghijklmnopqrstuvwxyz567890123"
    api_key: "NRAK-newrelic_api_key_ghijklmnopqrstuvwxyz890123456"
    
  sentry:
    dsn: "https://sentry_public_key_jklmnopqr:sentry_secret_key_stuvwxyz@sentry.io/123456"
    auth_token: "sentry_auth_token_mnopqrstuvwxyz123456789abcdefghijk"

# =============================================================================
# Message Queues and Event Streaming
# =============================================================================
messaging:
  rabbitmq:
    url: "amqp://rabbitmq_admin:rabbitmq_admin_password_123@rabbitmq.example.com:5672/"
    management_password: "rabbitmq_mgmt_password_456789abcdefghijklmno"
    
  kafka:
    bootstrap_servers: "kafka.example.com:9092"
    sasl_username: "kafka_user"
    sasl_password: "kafka_sasl_password_pqrstuvwxyz123456789abc"
    ssl_keystore_password: "kafka_keystore_password_defghijklmnopqr"
    ssl_truststore_password: "kafka_truststore_password_stuvwxyz567890"
    
  redis_streams:
    url: "redis://redis_streams_user:redis_streams_password_123@redis.example.com:6379"
    auth_token: "redis_streams_auth_token_456789abcdefghijklmnop"

# =============================================================================
# CI/CD and Development Tools
# =============================================================================
cicd:
  jenkins:
    api_token: "jenkins_api_token_123456789abcdefghijklmnopqrstuvw"
    webhook_secret: "jenkins_webhook_secret_xyz789abcdefghijklmnopqr"
    
  gitlab_ci:
    token: "glpat-gitlab_ci_token_stuvwxyz123456789abcdefghijk"
    runner_token: "gitlab_runner_token_lmnopqrstuvwxyz456789abcdef"
    
  github_actions:
    token: "ghp_github_actions_token_ghijklmnopqrstuvwxyz789012"
    webhook_secret: "github_actions_webhook_secret_345678901234567"
    
  docker_hub:
    username: "dockerhub_user"
    password: "dockerhub_password_890abcdefghijklmnopqrstuvwxy"
    
  npm:
    token: "npm_token_z123456789abcdefghijklmnopqrstuvwxyz567890"
    
  pypi:
    token: "pypi-token-abcdefghijklmnopqrstuvwxyz123456789012345"

# =============================================================================
# End of Sample Secrets
# =============================================================================
