name: Regression Test Suite

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]
  workflow_dispatch:
    inputs:
      update_baselines:
        description: 'Update baselines after run (use with caution)'
        type: boolean
        default: false

jobs:
  create-cluster:
    # Create a shared cluster for the matrix; skip on fork PRs due to secrets
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.fork == false
    runs-on: ubuntu-22.04
    outputs:
      kubeconfig: ${{ steps.create.outputs.cluster-kubeconfig }}
      cluster-id: ${{ steps.create.outputs.cluster-id }}
    steps:
      - name: Create k3s cluster
        id: create
        uses: replicatedhq/compatibility-actions/create-cluster@v1
        with:
          api-token: ${{ secrets.REPLICATED_API_TOKEN }}
          kubernetes-distribution: k3s
          cluster-name: regression-${{ github.run_id }}-${{ github.run_attempt }}
          ttl: 25m
          timeout-minutes: 5

  regression:
    # Run on push, manual dispatch, and internal PRs (skip fork PRs)
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.fork == false
    needs: create-cluster
    runs-on: ubuntu-22.04
    timeout-minutes: 25
    strategy:
      fail-fast: false
      matrix:
        suite: [preflight-v1beta3, preflight-v1beta2, support-bundle]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
          cache-dependency-path: go.sum

      - name: Setup Python for comparison
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          pip install pyyaml deepdiff

      - name: Configure kubeconfig
        run: |
          echo "${{ needs.create-cluster.outputs.kubeconfig }}" > $GITHUB_WORKSPACE/kubeconfig.yaml
          echo "KUBECONFIG=$GITHUB_WORKSPACE/kubeconfig.yaml" >> $GITHUB_ENV

      - name: Verify cluster access
        run: kubectl get nodes -o wide

      - name: Build binary for suite
        run: |
          case "${{ matrix.suite }}" in
            preflight-*)
              make bin/preflight
              ./bin/preflight version
              ;;
            support-bundle)
              make bin/support-bundle
              ./bin/support-bundle version
              ;;
          esac

      - name: Run suite
        run: |
          mkdir -p test/output
          case "${{ matrix.suite }}" in
            preflight-v1beta3)
              ./bin/preflight \
                examples/preflight/complex-v1beta3.yaml \
                --values examples/preflight/values-complex-full.yaml \
                --interactive=false \
                --format=json \
                --kubeconfig=$GITHUB_WORKSPACE/kubeconfig.yaml \
                --output=test/output/preflight-results-v1beta3.json
              BUNDLE=$(ls -t preflightbundle-*.tar.gz 2>/dev/null | head -1)
              if [ -n "$BUNDLE" ]; then
                mv "$BUNDLE" test/output/preflight-v1beta3-bundle.tar.gz
              fi
              ;;
            preflight-v1beta2)
              ./bin/preflight \
                examples/preflight/all-analyzers-v1beta2.yaml \
                --interactive=false \
                --format=json \
                --kubeconfig=$GITHUB_WORKSPACE/kubeconfig.yaml \
                --output=test/output/preflight-results-v1beta2.json
              BUNDLE=$(ls -t preflightbundle-*.tar.gz 2>/dev/null | head -1)
              if [ -n "$BUNDLE" ]; then
                mv "$BUNDLE" test/output/preflight-v1beta2-bundle.tar.gz
              fi
              ;;
            support-bundle)
              ./bin/support-bundle \
                examples/collect/host/all-kubernetes-collectors.yaml \
                --interactive=false \
                --kubeconfig=$GITHUB_WORKSPACE/kubeconfig.yaml \
                --output=test/output/supportbundle.tar.gz
              ;;
          esac

      - name: Compare against baselines
        run: |
          case "${{ matrix.suite }}" in
            preflight-v1beta3)
              if [ -f test/baselines/preflight-v1beta3/baseline.tar.gz ]; then
                python3 scripts/compare_bundles.py \
                  --baseline test/baselines/preflight-v1beta3/baseline.tar.gz \
                  --current test/output/preflight-v1beta3-bundle.tar.gz \
                  --rules scripts/compare_rules.yaml \
                  --report test/output/diff-report-v1beta3.json \
                  --spec-type preflight
              else
                echo "No baseline for v1beta3; skipping comparison"
              fi
              ;;
            preflight-v1beta2)
              if [ -f test/baselines/preflight-v1beta2/baseline.tar.gz ]; then
                python3 scripts/compare_bundles.py \
                  --baseline test/baselines/preflight-v1beta2/baseline.tar.gz \
                  --current test/output/preflight-v1beta2-bundle.tar.gz \
                  --rules scripts/compare_rules.yaml \
                  --report test/output/diff-report-v1beta2.json \
                  --spec-type preflight
              else
                echo "No baseline for v1beta2; skipping comparison"
              fi
              ;;
            support-bundle)
              if [ -f test/baselines/supportbundle/baseline.tar.gz ]; then
                python3 scripts/compare_bundles.py \
                  --baseline test/baselines/supportbundle/baseline.tar.gz \
                  --current test/output/supportbundle.tar.gz \
                  --rules scripts/compare_rules.yaml \
                  --report test/output/diff-report-supportbundle.json \
                  --spec-type supportbundle
              else
                echo "No baseline for support bundle; skipping comparison"
              fi
              ;;
          esac

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: regression-${{ matrix.suite }}-${{ github.run_id }}-${{ github.run_attempt }}
          path: |
            test/output/*.tar.gz
            test/output/*.json
          retention-days: 30

  cleanup:
    if: always() && (github.event_name != 'pull_request' || github.event.pull_request.head.repo.fork == false)
    needs: [create-cluster, regression]
    runs-on: ubuntu-22.04
    steps:
      - name: Remove cluster
        uses: replicatedhq/compatibility-actions/remove-cluster@v1
        continue-on-error: true
        with:
          api-token: ${{ secrets.REPLICATED_API_TOKEN }}
          cluster-id: ${{ needs.create-cluster.outputs.cluster-id }}
