{
  "kind": "ConfigMapList",
  "apiVersion": "v1",
  "metadata": {
    "resourceVersion": "8769"
  },
  "items": [
    {
      "kind": "ConfigMap",
      "apiVersion": "v1",
      "metadata": {
        "name": "coredns",
        "namespace": "kube-system",
        "uid": "a89a993a-e761-4736-8e88-a6718fc91a92",
        "resourceVersion": "229",
        "creationTimestamp": "2025-08-09T22:55:05Z",
        "managedFields": [
          {
            "manager": "kubeadm",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-08-09T22:55:05Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:data": {
                ".": {},
                "f:Corefile": {}
              }
            }
          }
        ]
      },
      "data": {
        "Corefile": ".:53 {\n    errors\n    health {\n       lameduck 5s\n    }\n    ready\n    kubernetes cluster.local in-addr.arpa ip6.arpa {\n       pods insecure\n       fallthrough in-addr.arpa ip6.arpa\n       ttl 30\n    }\n    prometheus :9153\n    forward . /etc/resolv.conf {\n       max_concurrent 1000\n    }\n    cache 30 {\n       disable success cluster.local\n       disable denial cluster.local\n    }\n    loop\n    reload\n    loadbalance\n}\n"
      }
    },
    {
      "kind": "ConfigMap",
      "apiVersion": "v1",
      "metadata": {
        "name": "extension-apiserver-authentication",
        "namespace": "kube-system",
        "uid": "2073e165-4210-45b9-a3fd-280afbbf15e6",
        "resourceVersion": "28",
        "creationTimestamp": "2025-08-09T22:55:03Z",
        "managedFields": [
          {
            "manager": "kube-apiserver",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-08-09T22:55:03Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:data": {
                ".": {},
                "f:client-ca-file": {},
                "f:requestheader-allowed-names": {},
                "f:requestheader-client-ca-file": {},
                "f:requestheader-extra-headers-prefix": {},
                "f:requestheader-group-headers": {},
                "f:requestheader-username-headers": {}
              }
            }
          }
        ]
      },
      "data": {
        "client-ca-file": "-----BEGIN CERTIFICATE-----\nMIIDBTCCAe2gAwIBAgIIGyXN8PNVaAUwDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczAeFw0yNTA4MDkyMjQ5NTZaFw0zNTA4MDcyMjU0NTZaMBUx\nEzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK\nAoIBAQDNhANYb/mcWwGDeVV4oMJPqMWac/Yr3ff01uH+8ftX1W2fU0GCizo+s+Zz\nlDxYkiAYcyfbqOqNogCanA39QXBblYZ2rKbDVdvby3wjUVyc7yA5C3eU/IgfvAJw\n764XUV6GuGudOYn8awa4Veco0rZ/Xw1wV+WwyW5LcAj1j29qDuYEL1y8TClGYw1q\nUcBowMI57MBTW/l0GhC+EMHkwYXlIkK8QxPZI6w4afDdyH5iEwnJ0ayQg7sRcjSd\nLQP7T6JGUz3BN3Shdpvxm0BsaxrtWvdALcreI7JPw5AJdnhVhWI4ChOcf7L7bC9P\n7PUVyAZkwbk+iVFykYmL1r/Y9U/rAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP\nBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBTcBkwBisroJtumoMoz2SNgHK6XnzAV\nBgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQCWk8q06TSq\nFA5TxNMkqrMYBroxLCnBdmundpFDRxdaIm4yqNrCmWHgt2DX+ilb+er94pCRpiD1\nDYHWABcj48FAJZW+zBqhCu5mgweK8fzpYWQtkPl7IacMvXC1lp+ypxuImVjlUTeY\nYAZ3HzpWxIa/unFWOBHryskKVfN9rIeBP/zVnrpMwI0/StzhSVErOj+8xYOkzrXu\nB3aQN6JMAOQiSt/zi3f6yQdWpQ+x8X/W1jh/S+HJ3obayKcw/giRwlsWRzxEnjwB\n/Anc8dXHEln6Uc19X5+YGcWzUlYRcWV17XlemQOqNJIc7TUfkxRBTDq2JUN5IrKf\nLTDSIn3zZoRB\n-----END CERTIFICATE-----\n",
        "requestheader-allowed-names": "[\"front-proxy-client\"]",
        "requestheader-client-ca-file": "-----BEGIN CERTIFICATE-----\nMIIDETCCAfmgAwIBAgIIE4RGVZgH4uMwDQYJKoZIhvcNAQELBQAwGTEXMBUGA1UE\nAxMOZnJvbnQtcHJveHktY2EwHhcNMjUwODA5MjI0OTU2WhcNMzUwODA3MjI1NDU2\nWjAZMRcwFQYDVQQDEw5mcm9udC1wcm94eS1jYTCCASIwDQYJKoZIhvcNAQEBBQAD\nggEPADCCAQoCggEBALoDga28ZezZqNz7BWKreIOBpLgCp/pt1GchGwAkM+w8kE0Z\nCaXxWCvpUO6tVNYKyr/uDDwnL4nKiN6yOmWcbUBzmcplkqRMdf2GYDx4WC8gfN/W\nhkTQfrysqPS1AxKsPsIvoDcjspM2lXQ+FC75c3+eSpE/GzTiRRU3ymhW8GBEXkdg\nCGnes+hICVNPM6zbq4mp1t1Nuh8IoZQFJl6Oo1rKJTr/5fQEC069ynyeVTYAxXcM\nlEJneFeGiofT5HYuUIE38nAV0wwQZgB7RyLtdF6jrW9IHOP6QPVrji0RJPNtZ7Ch\nYZhb9SXa11eoQqCxI56sdOzYqm7hovG6MFM9vDMCAwEAAaNdMFswDgYDVR0PAQH/\nBAQDAgKkMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFDxmVlk8zckctFKmERtR\n7gH9YImFMBkGA1UdEQQSMBCCDmZyb250LXByb3h5LWNhMA0GCSqGSIb3DQEBCwUA\nA4IBAQCi4YeaEG/jqXJnO47bfwcY/J+XvA06S9fFN0UA06wM80T7OckQo4vFEaLI\nBbEJIUx3j5CL6/0V7MiT7Kuu3mta0FZR1gvQuoK7oDe8n34ArTqNfdAf3s2vKljn\nHfT8b7GdBw0Jc9ny7+MoAEGGO02ji1wbkqeeWbA8dPNjBhq6Nw/1xdoF+DOrksp3\nvRX+gMDmqmzNqwcXAQsGS9ufY//pc5qwAzFQkdvGPBV+puyvJkv/R9LC/3RantaV\nds5GkmT7HwuLIRPpYXBVe/PFoOXDG7XOZE00tpy1FhVDcs5EDn7vWH6imhvfpwtg\nFF/SIJ2PNxuU/8iFL7VhvJpie0Ms\n-----END CERTIFICATE-----\n",
        "requestheader-extra-headers-prefix": "[\"X-Remote-Extra-\"]",
        "requestheader-group-headers": "[\"X-Remote-Group\"]",
        "requestheader-username-headers": "[\"X-Remote-User\"]"
      }
    },
    {
      "kind": "ConfigMap",
      "apiVersion": "v1",
      "metadata": {
        "name": "kube-apiserver-legacy-service-account-token-tracking",
        "namespace": "kube-system",
        "uid": "fc13be6c-c483-45ee-b0e8-f0c109e135b3",
        "resourceVersion": "70",
        "creationTimestamp": "2025-08-09T22:55:03Z",
        "managedFields": [
          {
            "manager": "kube-apiserver",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-08-09T22:55:03Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:data": {
                ".": {},
                "f:since": {}
              }
            }
          }
        ]
      },
      "data": {
        "since": "2025-08-09"
      }
    },
    {
      "kind": "ConfigMap",
      "apiVersion": "v1",
      "metadata": {
        "name": "kube-proxy",
        "namespace": "kube-system",
        "uid": "0aa7a29d-3db0-444f-af8b-af0656913573",
        "resourceVersion": "244",
        "creationTimestamp": "2025-08-09T22:55:05Z",
        "labels": {
          "app": "kube-proxy"
        },
        "managedFields": [
          {
            "manager": "kubeadm",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-08-09T22:55:05Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:data": {
                ".": {},
                "f:config.conf": {},
                "f:kubeconfig.conf": {}
              },
              "f:metadata": {
                "f:labels": {
                  ".": {},
                  "f:app": {}
                }
              }
            }
          }
        ]
      },
      "data": {
        "config.conf": "apiVersion: kubeproxy.config.k8s.io/v1alpha1\nbindAddress: 0.0.0.0\nbindAddressHardFail: false\nclientConnection:\n  acceptContentTypes: \"\"\n  burst: 0\n  contentType: \"\"\n  kubeconfig: /var/lib/kube-proxy/kubeconfig.conf\n  qps: 0\nclusterCIDR: 10.244.0.0/16\nconfigSyncPeriod: 0s\nconntrack:\n  maxPerCore: 0\n  min: null\n  tcpBeLiberal: false\n  tcpCloseWaitTimeout: null\n  tcpEstablishedTimeout: null\n  udpStreamTimeout: 0s\n  udpTimeout: 0s\ndetectLocal:\n  bridgeInterface: \"\"\n  interfaceNamePrefix: \"\"\ndetectLocalMode: \"\"\nenableProfiling: false\nhealthzBindAddress: \"\"\nhostnameOverride: \"\"\niptables:\n  localhostNodePorts: null\n  masqueradeAll: false\n  masqueradeBit: null\n  minSyncPeriod: 1s\n  syncPeriod: 0s\nipvs:\n  excludeCIDRs: null\n  minSyncPeriod: 0s\n  scheduler: \"\"\n  strictARP: false\n  syncPeriod: 0s\n  tcpFinTimeout: 0s\n  tcpTimeout: 0s\n  udpTimeout: 0s\nkind: KubeProxyConfiguration\nlogging:\n  flushFrequency: 0\n  options:\n    json:\n      infoBufferSize: \"0\"\n    text:\n      infoBufferSize: \"0\"\n  verbosity: 0\nmetricsBindAddress: \"\"\nmode: iptables\nnftables:\n  masqueradeAll: false\n  masqueradeBit: null\n  minSyncPeriod: 0s\n  syncPeriod: 0s\nnodePortAddresses: null\noomScoreAdj: null\nportRange: \"\"\nshowHiddenMetricsForVersion: \"\"\nwinkernel:\n  enableDSR: false\n  forwardHealthCheckVip: false\n  networkName: \"\"\n  rootHnsEndpointName: \"\"\n  sourceVip: \"\"",
        "kubeconfig.conf": "apiVersion: v1\nkind: Config\nclusters:\n- cluster:\n    certificate-authority: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n    server: https://troubleshoot-test-control-plane:6443\n  name: default\ncontexts:\n- context:\n    cluster: default\n    namespace: default\n    user: default\n  name: default\ncurrent-context: default\nusers:\n- name: default\n  user:\n    tokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token"
      }
    },
    {
      "kind": "ConfigMap",
      "apiVersion": "v1",
      "metadata": {
        "name": "kube-root-ca.crt",
        "namespace": "kube-system",
        "uid": "311cb08a-d1bd-4846-9f27-4810462a870f",
        "resourceVersion": "335",
        "creationTimestamp": "2025-08-09T22:55:12Z",
        "annotations": {
          "kubernetes.io/description": "Contains a CA bundle that can be used to verify the kube-apiserver when using internal endpoints such as the internal service IP or kubernetes.default.svc. No other usage is guaranteed across distributions of Kubernetes clusters."
        },
        "managedFields": [
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-08-09T22:55:12Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:data": {
                ".": {},
                "f:ca.crt": {}
              },
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:kubernetes.io/description": {}
                }
              }
            }
          }
        ]
      },
      "data": {
        "ca.crt": "-----BEGIN CERTIFICATE-----\nMIIDBTCCAe2gAwIBAgIIGyXN8PNVaAUwDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczAeFw0yNTA4MDkyMjQ5NTZaFw0zNTA4MDcyMjU0NTZaMBUx\nEzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK\nAoIBAQDNhANYb/mcWwGDeVV4oMJPqMWac/Yr3ff01uH+8ftX1W2fU0GCizo+s+Zz\nlDxYkiAYcyfbqOqNogCanA39QXBblYZ2rKbDVdvby3wjUVyc7yA5C3eU/IgfvAJw\n764XUV6GuGudOYn8awa4Veco0rZ/Xw1wV+WwyW5LcAj1j29qDuYEL1y8TClGYw1q\nUcBowMI57MBTW/l0GhC+EMHkwYXlIkK8QxPZI6w4afDdyH5iEwnJ0ayQg7sRcjSd\nLQP7T6JGUz3BN3Shdpvxm0BsaxrtWvdALcreI7JPw5AJdnhVhWI4ChOcf7L7bC9P\n7PUVyAZkwbk+iVFykYmL1r/Y9U/rAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP\nBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBTcBkwBisroJtumoMoz2SNgHK6XnzAV\nBgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQCWk8q06TSq\nFA5TxNMkqrMYBroxLCnBdmundpFDRxdaIm4yqNrCmWHgt2DX+ilb+er94pCRpiD1\nDYHWABcj48FAJZW+zBqhCu5mgweK8fzpYWQtkPl7IacMvXC1lp+ypxuImVjlUTeY\nYAZ3HzpWxIa/unFWOBHryskKVfN9rIeBP/zVnrpMwI0/StzhSVErOj+8xYOkzrXu\nB3aQN6JMAOQiSt/zi3f6yQdWpQ+x8X/W1jh/S+HJ3obayKcw/giRwlsWRzxEnjwB\n/Anc8dXHEln6Uc19X5+YGcWzUlYRcWV17XlemQOqNJIc7TUfkxRBTDq2JUN5IrKf\nLTDSIn3zZoRB\n-----END CERTIFICATE-----\n"
      }
    },
    {
      "kind": "ConfigMap",
      "apiVersion": "v1",
      "metadata": {
        "name": "kubeadm-config",
        "namespace": "kube-system",
        "uid": "1ff1bd78-679e-4c34-b701-62a0c5a14e44",
        "resourceVersion": "212",
        "creationTimestamp": "2025-08-09T22:55:04Z",
        "managedFields": [
          {
            "manager": "kubeadm",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-08-09T22:55:04Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:data": {
                ".": {},
                "f:ClusterConfiguration": {}
              }
            }
          }
        ]
      },
      "data": {
        "ClusterConfiguration": "apiServer:\n  certSANs:\n  - localhost\n  - 127.0.0.1\n  extraArgs:\n  - name: runtime-config\n    value: \"\"\napiVersion: kubeadm.k8s.io/v1beta4\ncaCertificateValidityPeriod: 87600h0m0s\ncertificateValidityPeriod: 8760h0m0s\ncertificatesDir: /etc/kubernetes/pki\nclusterName: troubleshoot-test\ncontrolPlaneEndpoint: troubleshoot-test-control-plane:6443\ncontrollerManager:\n  extraArgs:\n  - name: enable-hostpath-provisioner\n    value: \"true\"\ndns: {}\nencryptionAlgorithm: RSA-2048\netcd:\n  local:\n    dataDir: /var/lib/etcd\nimageRepository: registry.k8s.io\nkind: ClusterConfiguration\nkubernetesVersion: v1.33.1\nnetworking:\n  dnsDomain: cluster.local\n  podSubnet: 10.244.0.0/16\n  serviceSubnet: 10.96.0.0/16\nproxy: {}\nscheduler: {}\n"
      }
    },
    {
      "kind": "ConfigMap",
      "apiVersion": "v1",
      "metadata": {
        "name": "kubelet-config",
        "namespace": "kube-system",
        "uid": "ca6c38b6-2f5b-4d01-8427-42d4e45833d4",
        "resourceVersion": "215",
        "creationTimestamp": "2025-08-09T22:55:04Z",
        "managedFields": [
          {
            "manager": "kubeadm",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-08-09T22:55:04Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:data": {
                ".": {},
                "f:kubelet": {}
              }
            }
          }
        ]
      },
      "data": {
        "kubelet": "apiVersion: kubelet.config.k8s.io/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    cacheTTL: 0s\n    enabled: true\n  x509:\n    clientCAFile: /etc/kubernetes/pki/ca.crt\nauthorization:\n  mode: Webhook\n  webhook:\n    cacheAuthorizedTTL: 0s\n    cacheUnauthorizedTTL: 0s\ncgroupDriver: systemd\ncgroupRoot: /kubelet\nclusterDNS:\n- 10.96.0.10\nclusterDomain: cluster.local\ncontainerRuntimeEndpoint: \"\"\ncpuManagerReconcilePeriod: 0s\ncrashLoopBackOff: {}\nevictionHard:\n  imagefs.available: 0%\n  nodefs.available: 0%\n  nodefs.inodesFree: 0%\nevictionPressureTransitionPeriod: 0s\nfailSwapOn: false\nfileCheckFrequency: 0s\nhealthzBindAddress: 127.0.0.1\nhealthzPort: 10248\nhttpCheckFrequency: 0s\nimageGCHighThresholdPercent: 100\nimageMaximumGCAge: 0s\nimageMinimumGCAge: 0s\nkind: KubeletConfiguration\nlogging:\n  flushFrequency: 0\n  options:\n    json:\n      infoBufferSize: \"0\"\n    text:\n      infoBufferSize: \"0\"\n  verbosity: 0\nmemorySwap: {}\nnodeStatusReportFrequency: 0s\nnodeStatusUpdateFrequency: 0s\nrotateCertificates: true\nruntimeRequestTimeout: 0s\nshutdownGracePeriod: 0s\nshutdownGracePeriodCriticalPods: 0s\nstaticPodPath: /etc/kubernetes/manifests\nstreamingConnectionIdleTimeout: 0s\nsyncFrequency: 0s\nvolumeStatsAggPeriod: 0s\n"
      }
    }
  ]
}
